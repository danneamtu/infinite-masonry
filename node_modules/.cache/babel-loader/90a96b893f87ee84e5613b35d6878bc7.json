{"ast":null,"code":"function topPosition(domElt) {\n  if (!domElt) {\n    return 0;\n  }\n\n  return domElt.offsetTop + topPosition(domElt.offsetParent);\n}\n\nmodule.exports = function (React) {\n  if (React.addons && React.addons.InfiniteScroll) {\n    return React.addons.InfiniteScroll;\n  }\n\n  React.addons = React.addons || {};\n  var InfiniteScroll = React.addons.InfiniteScroll = React.createClass({\n    getDefaultProps: function () {\n      return {\n        pageStart: 0,\n        hasMore: false,\n        loadMore: function () {},\n        threshold: 250\n      };\n    },\n    componentDidMount: function () {\n      this.pageLoaded = this.props.pageStart;\n      this.attachScrollListener();\n    },\n    componentDidUpdate: function () {\n      this.attachScrollListener();\n    },\n    render: function () {\n      var props = this.props;\n      return React.DOM.div(null, props.children, props.hasMore && (props.loader || InfiniteScroll._defaultLoader));\n    },\n    scrollListener: function () {\n      var el = this.getDOMNode();\n      var scrollTop = window.pageYOffset !== undefined ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n\n      if (topPosition(el) + el.offsetHeight - scrollTop - window.innerHeight < Number(this.props.threshold)) {\n        this.detachScrollListener(); // call loadMore after detachScrollListener to allow\n        // for non-async loadMore functions\n\n        this.props.loadMore(this.pageLoaded += 1);\n      }\n    },\n    attachScrollListener: function () {\n      if (!this.props.hasMore) {\n        return;\n      }\n\n      window.addEventListener('scroll', this.scrollListener);\n      window.addEventListener('resize', this.scrollListener);\n      this.scrollListener();\n    },\n    detachScrollListener: function () {\n      window.removeEventListener('scroll', this.scrollListener);\n      window.removeEventListener('resize', this.scrollListener);\n    },\n    componentWillUnmount: function () {\n      this.detachScrollListener();\n    }\n  });\n\n  InfiniteScroll.setDefaultLoader = function (loader) {\n    InfiniteScroll._defaultLoader = loader;\n  };\n\n  return InfiniteScroll;\n};","map":{"version":3,"sources":["/Users/danneamtu/Documents/websites/components/infinite-masonry/node_modules/react-infinite-scroll/src/react-infinite-scroll.js"],"names":["topPosition","domElt","offsetTop","offsetParent","module","exports","React","addons","InfiniteScroll","createClass","getDefaultProps","pageStart","hasMore","loadMore","threshold","componentDidMount","pageLoaded","props","attachScrollListener","componentDidUpdate","render","DOM","div","children","loader","_defaultLoader","scrollListener","el","getDOMNode","scrollTop","window","pageYOffset","undefined","document","documentElement","body","parentNode","offsetHeight","innerHeight","Number","detachScrollListener","addEventListener","removeEventListener","componentWillUnmount","setDefaultLoader"],"mappings":"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","sourcesContent":["function topPosition(domElt) {\n  if (!domElt) {\n    return 0;\n  }\n  return domElt.offsetTop + topPosition(domElt.offsetParent);\n}\n\nmodule.exports = function (React) {\n  if (React.addons && React.addons.InfiniteScroll) {\n    return React.addons.InfiniteScroll;\n  }\n  React.addons = React.addons || {};\n  var InfiniteScroll = React.addons.InfiniteScroll = React.createClass({\n    getDefaultProps: function () {\n      return {\n        pageStart: 0,\n        hasMore: false,\n        loadMore: function () {},\n        threshold: 250\n      };\n    },\n    componentDidMount: function () {\n      this.pageLoaded = this.props.pageStart;\n      this.attachScrollListener();\n    },\n    componentDidUpdate: function () {\n      this.attachScrollListener();\n    },\n    render: function () {\n      var props = this.props;\n      return React.DOM.div(null, props.children, props.hasMore && (props.loader || InfiniteScroll._defaultLoader));\n    },\n    scrollListener: function () {\n      var el = this.getDOMNode();\n      var scrollTop = (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n      if (topPosition(el) + el.offsetHeight - scrollTop - window.innerHeight < Number(this.props.threshold)) {\n        this.detachScrollListener();\n        // call loadMore after detachScrollListener to allow\n        // for non-async loadMore functions\n        this.props.loadMore(this.pageLoaded += 1);\n      }\n    },\n    attachScrollListener: function () {\n      if (!this.props.hasMore) {\n        return;\n      }\n      window.addEventListener('scroll', this.scrollListener);\n      window.addEventListener('resize', this.scrollListener);\n      this.scrollListener();\n    },\n    detachScrollListener: function () {\n      window.removeEventListener('scroll', this.scrollListener);\n      window.removeEventListener('resize', this.scrollListener);\n    },\n    componentWillUnmount: function () {\n      this.detachScrollListener();\n    }\n  });\n  InfiniteScroll.setDefaultLoader = function (loader) {\n    InfiniteScroll._defaultLoader = loader;\n  };\n  return InfiniteScroll;\n};"]},"metadata":{},"sourceType":"script"}